2.40 有了进程，为什么还要有线程？
参考回答

原因

进程在早期的多任务操作系统中是基本的执行单元。
每次进程切换，都要先保存进程资源然后再恢复，这称为上下文切换。
但是进程频繁切换将引起额外开销，从而严重影响系统的性能。
为了减少进程切换的开销，人们把两个任务放到一个进程中，每个任务用一个更小粒度的执行单元来实现并发执行，这就是线程。

线程与进程对比

（1）进程间的信息难以共享。由于除去只读代码段外，父子进程并未共享内存，因此必须采用一些进程间通信方式，
在进程间进行信息交换。

但多个线程共享进程的内存，如代码段、数据段、扩展段，线程间进行信息交换十分方便。

（2）调用 fork() 来创建进程的代价相对较高，即便利用写时复制技术，
仍然需要复制诸如内存页表和文件描述符表之类的多种进程属性，这意味着 fork() 调用在时间上的开销依然不菲。

但创建线程比创建进程通常要快 10 倍甚至更多。
线程间是共享虚拟地址空间的，无需采用写时复制来复制内存，也无需复制页表。

