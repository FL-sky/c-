// 1.3.22 说说纯虚函数能实例化吗，为什么？派生类要实现吗，为什么？
// 参考回答

// 纯虚函数不可以实例化，但是可以用其派生类实例化，示例如下：

#include <iostream>
using namespace std;
// class Base
// {
// public:
//     virtual void func() = 0;
// };
class Base
{
public:
    virtual void func() = 0;
};
class Derived : public Base
{
public:
    void func() override
    {
        cout << "哈哈" << endl;
        cout << "hello" << endl;
    }
};
int main()
{
    Base *b = new Derived();
    b->func();
    return 0;
}

// 2.虚函数的原理采用 vtable。类中含有纯虚函数时，其vtable 不完全，有个空位。

// 即“纯虚函数在类的vftable表中对应的表项被赋值为0。也就是指向一个不存在的函数。
// 由于编译器绝对不允许有调用一个不存在的函数的可能，所以该类不能生成对象。在它的派生类中，除非重写此函数，否则也不能生成对象。”

// 所以纯虚函数不能实例化。

// 3.纯虚函数是在基类中声明的虚函数，它要求任何派生类都要定义自己的实现方法，以实现多态性。

// 4.定义纯虚函数是为了实现一个接口，用来规范派生类的行为，也即规范继承这个类的程序员必须实现这个函数。
// 派生类仅仅只是继承函数的接口。纯虚函数的意义在于，让所有的类对象（主要是派生类对象）都可以执行纯虚函数的动作，但基类无法为纯虚函数提供一个合理的缺省实现。
// 所以类纯虚函数的声明就是在告诉子类的设计者，“你必须提供一个纯虚函数的实现，但我不知道你会怎样实现它”。