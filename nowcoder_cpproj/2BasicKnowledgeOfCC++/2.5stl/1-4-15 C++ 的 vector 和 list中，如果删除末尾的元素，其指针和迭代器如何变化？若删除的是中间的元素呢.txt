1.4.15 C++ 的 vector 和 list中，如果删除末尾的元素，其指针和迭代器如何变化？若删除的是中间的元素呢？
参考回答

1.迭代器和指针之间的区别

    迭代器不是指针，是类模板，表现的像指针。他只是模拟了指针的一些功能，
    重载了指针的一些操作符，-->、++、--等。迭代器封装了指针，
    是一个”可遍历STL（ Standard Template Library）容器内全部或部分元素”的对象，
    本质是封装了原生指针，是指针概念的一种提升，提供了比指针更高级的行为，相当于一种智能指针，
    他可以根据不同类型的数据结构来实现不同的++，--等操作。

    迭代器返回的是对象引用而不是对象的值，所以cout只能输出迭代器使用取值后的值而不能直接输出其自身。

2.vector和list特性

vector特性    动态数组。元素在内存连续存放。随机存取任何元素都在常数时间完成。
在尾端增删元素具有较大的性能（大部分情况下是常数时间）。

list特性    双向链表。元素在内存不连续存放。在任何位置增删元素都能在常数时间完成。不支持随机存取。

3.vector增删元素

对于vector而言，删除某个元素以后，该元素后边的每个元素的迭代器都会失效，
后边每个元素都往前移动一位，erase返回下一个有效的迭代器。

4.list增删元素

对于list而言，删除某个元素，只有“指向被删除元素”的那个迭代器失效，其它迭代器不受任何影响。