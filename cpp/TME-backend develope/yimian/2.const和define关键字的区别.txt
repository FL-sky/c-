const是C语言中的一个关键字，用于标识其是常量。

define是宏定义语句，在程序的预处理阶段进行替换，不进行类型检查。

区别：

1， 编译器处理方式不同：define在预处理阶段对文本直接替换，const则是在编译时确定值。

2， 类型检查：define不进行类型检查，没有类型；const有数据类型，会进行类型检查。

3， 存储的方式不同：

define定义的宏，只是在预编译时展开替换，不会分配内存；const常量会分配内存。

4， 存储空间

Const从一定程度上可以节省空间。示例：

#define PI3.14159 //常量宏 

  const doulbe Pi=3.14159; //此时并未将Pi放入ROM中 ...... 

  double i=Pi; //此时为Pi分配内存，以后不再分配！ 

  double I=PI; //编译期间进行宏替换，分配内存 

  double j=Pi; //没有内存分配 

  double J=PI; //再进行宏替换，又一次分配内存！ 

  const定义常量从汇编的角度来看，只是给出了对应的内存地址，而不是像#define一样

给出的是立即数，所以，const定义的常量在程序运行过程中只有一份拷贝（因为是全局的只读变量，存在静态区），而 #define定义的常量在内存中有若干个拷贝。

       此案例引用自 http://blog.csdn.net/love_gaohz/article/details/7567856

5， #define宏只是进行替换，没有做计算，不对表达式进行求解。

6， const定义的常量可调试，而define宏不可以。

 

注意：在c++中，只使用const常量，而不用宏常量，即const常量完全取代宏常量。

 

类中的常量

       使用const来可实现类中的常量定义。

注意：const的数据成员只是在类实例化的某个对象生存期内是常量，但对于类而言是可变的。类可实例化多个对象，实例化对象时对const数据成员初始化（值可以不同）。

const数据成员的初始化方法：只能在类的构造函数的初始化列表中初始化

例如：

class  test{undefined

       test(int n);  //构造函数

       const int _num;

…..

};

 

test::test(int n): _num(n)  //初始化列表

{undefined

…

}

 

       之前提到，利用const的定义的常量数据成员对于类而言，并不是真正的常量。那么如何建立类的常量？ 可使用枚举可以实现。

       Classtest{undefined

              enum{a = 2;  b = 5; }  //枚举常量

              …..

}

这样在类中a、b就是常量，不能更改。

 

附：枚举常量介绍

枚举常量是要占用内存的，它要在内存中开辟一个空间来存放枚举变量；其常量值在没有赋值时系统会默认给它的第一个变量赋值0，后面的依次为1、2......使用枚举类型的最大好处是使得程序可读性增强。

enum 枚举类型名{常量1，常量2，常量3，.......}；

 

例如定义一个星期的枚举常量：enum Week {Mon,Tue,Wed,.....}；

这就定义了一个新的数据类型：Week。

Week数据类型来源于int类型（默认）。

Week类型的数据只能有7种取值，它们是：SUNDAY,MONDAY,TUESDAY……SATURDAY。其中SUNDAY = 0,MONDAY = 1……SATURDAY = 6。也就是说，第1个枚举值代表0，第2个枚举值代表1，这样依次递增1。

不过，也可以在定义时，直接指定某个或某些枚举值的数值。比如，对于中国人，可能对于用0表示星期日不是很好接受，不如用7来表示星期天。这样我们需要的个值就是 1,2,3,4,5,6,7。可以这样定义：

enum Week {MON = 1,TUE,WED,THUR,FRI,SAT, SUN};

我们希望星期一仍然从1开始，枚举类型默认枚举值从0开始，所以我们直接指定MONDAY等于1，这样，TUESDAY就将等于2，直接到SUNDAY等于7。

枚举值，我们就称为枚举常量，因为它一经定义以后，就不可再改变
————————————————
版权声明：本文为CSDN博主「lixg88888888」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/lixg88888888/article/details/78939459




语言基础
https://www.nowcoder.com/tutorial/93/a34ed23d58b84da3a707c70371f59c21

1.1.18 说说const和define的区别。
参考回答

const用于定义常量；而define用于定义宏，而宏也可以用于定义常量。都用于常量定义时，它们的区别有：

const生效于编译的阶段；define生效于预处理阶段。

const定义的常量，在C语言中是存储在内存中、需要额外的内存空间的；define定义的常量，运行时是直接的操作数，并不会存放在内存中。

const定义的常量是带类型的；define定义的常量不带类型。因此define定义的常量不利于类型检查。